{
    "dialog-antd": {
        "prefix": "dialog-antd",
        "scope": "javascript,typescript,javascriptreact,plaintext",
        "body": [
            "dialogForm = () => {",
            "    const core = new FormCore({",
            "        onChange: (firekeys, values, ctx) => {",
            "            const { province } = values;",
            "            if (firekeys.indexOf('province' !== -1) && province === '广东省') {",
            "                ctx.setItemProps('city', { options: [{ label: '深圳', value: '深圳' }] })",
            "            }",
            "        }",
            "    });",
            "    Dialog.show({",
            "        footerAlign: 'label',",
            "        title: 'dialog',",
            "        locale: 'zh',",
            "        content: <Form core={core} layout={{ label: 4, control: 20 }}>",
            "            <div className=\"list-dialog-hint\" >地址配置</div>",
            "            <FormItem label=\"province\" name=\"province\">",
            "                <Select options={[{ label: '广东省', value: '广东省' }]} />",
            "            </FormItem>",
            "            <FormItem label=\"city\" name=\"city\">",
            "                <Select options={[]} />",
            "            </FormItem>",
            "        </Form>,",
            "        onOk: async (values, hide) => {",
            "            console.log('values', values);",
            "            await sleep(1000);",
            "            message.success('This is a message of success', 1, hide);",
            "        }",
            "    });",
            "}"
        ],
        "title": "dialog-antd"
    },
    "if": {
        "prefix": "if",
        "scope": "javascript,typescript,javascriptreact,plaintext",
        "body": [
            "<If when={(values, { globalStatus }) => {",
            "    return values.word === 'noform';",
            "}}>",
            "    <div>anything...</div>",
            "</If>",
            "<If when={(values, { globalStatus }) => {",
            "    return values.word === 'noform';",
            "}}>",
            "    <FormItem label=\"noform\" value=\"noform\"><Input /></FormItem>",
            "</If>"
        ],
        "title": "if"
    },
    "imp-antd": {
        "prefix": "imp-antd",
        "scope": "javascript,typescript,javascriptreact,plaintext",
        "body": [
            "import Form, { FormItem, FormCore } from 'noform';",
            "import { Input, Select, Checkbox, Radio, Switch, Slider, DatePicker, TimePicker,",
            "    Rate, Cascader, TreeSelect, Upload, Button, InputNumber, AutoComplete } from 'nowrapper/lib/antd';",
            "import { Alert, Icon } from 'antd';",
            "const { TextArea } = Input;",
            "const { Group: RadioGroup } = Radio;",
            "const { Group: CheckboxGroup } = Checkbox;",
            "const { RangePicker } = DatePicker;"
        ],
        "title": "imp-antd"
    },
    "nolist-antd": {
        "prefix": "nolist-antd",
        "scope": "javascript,typescript,javascriptreact,plaintext",
        "body": [
            "import './next.scss';",
            "import List, { Any, Filter, Table, Pagination } from 'nolist/lib/wrapper/next';",
            "import Form, { FormItem, FormCore } from 'noform';",
            "import { Message } from '@alifd/next';",
            "import { Input, Select, DatePicker, Dialog } from 'nowrapper/lib/next';",
            "const handleError = (e) => {",
            "  console.log('e', e);",
            "};",
            "const sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));",
            "const onMount = (list) => {",
            "  window.list = list;",
            "}",
            "const editForm = (val, index, record) => {",
            "  const core = new FormCore({",
            "    values: record",
            "  });",
            "  Dialog.show({",
            "    title: '编辑',",
            "    footerAlign: 'label',",
            "    locale: 'zh',",
            "    style: { width: '480px' },",
            "    enableValidate: true,",
            "    onOk: async (values, hide) => {",
            "        await sleep(1000);",
            "        Message.success('编辑成功');",
            "        hide();",
            "    },",
            "    content: <Form handleError={handleError} layout={{ label: 8, control: 16 }} core={core} >",
            "        <FormItem name=\"id\" label=\"id\"><Input /></FormItem>",
            "        <FormItem name=\"username\" label=\"username\"><Input /></FormItem>",
            "        <FormItem name=\"age\" label=\"age\"><Input /></FormItem>",
            "        <FormItem name=\"gender\" label=\"gender\"><Input /></FormItem>",
            "        <FormItem name=\"country\" label=\"country\"><Input /></FormItem>",
            "        <FormItem name=\"registeredDate\" label=\"registeredDate\"><Input /></FormItem>",
            "    </Form>",
            "  });",
            "};",
            "const renderOperation = (a, b, c) => {",
            "  console.log('a', a, 'b', b, 'c', c);",
            "  return <a href=\"javascript:void(0)\" onClick={editForm}>编辑</a>",
            "};",
            "class NoList extends React.Component {",
            "  render() {",
            "    return (",
            "      <div style={{ margin: '24px' }}>",
            "        <List  url=\"/docs/mock.json\" onError={handleError} onMount={onMount}>",
            "            <Filter >",
            "              <Filter.Item label=\"username\" name=\"username\"><Input /></Filter.Item>",
            "              <Filter.Item label=\"age\" name=\"age\"><Input /></Filter.Item>",
            "              <Filter.Item label=\"country\" name=\"country\"><Select dataSource={[]} /></Filter.Item>",
            "              <Filter.Item label=\"date\" name=\"date\"><DatePicker /></Filter.Item>",
            "              <Filter.Item label=\"创建时间\" colSpan=\"2\">",
            "                  <React.Fragment>",
            "                      <Filter.Item noLayout name=\"createStartTime\"><DatePicker /></Filter.Item>",
            "                      <Filter.Item noLayout name=\"createEndTime\"><DatePicker /></Filter.Item>",
            "                  </React.Fragment>",
            "              </Filter.Item>",
            "            </Filter>",
            "            <Table>",
            "              <Table.Column title=\"id\" dataIndex=\"id\" />",
            "              <Table.Column title=\"username\" dataIndex=\"username\" />",
            "              <Table.Column title=\"age\" dataIndex=\"age\" />",
            "              <Table.Column title=\"gender\" dataIndex=\"gender\" />",
            "              <Table.Column title=\"country\" dataIndex=\"country\" />",
            "              <Table.Column title=\"registeredDate\" dataIndex=\"registeredDate\" />",
            "              <Table.Column title=\"operation\" cell={renderOperation} />",
            "            </Table>",
            "            <Pagination />",
            "        </List>",
            "      </div>",
            "    );",
            "  }",
            "}"
        ],
        "title": "nolist-antd"
    }
}