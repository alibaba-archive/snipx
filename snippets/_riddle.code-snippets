{
    "简单表单/form": {
        "prefix": "form",
        "scope": "javascript,typescript,javascriptreact,plaintext",
        "body": [
            "/** 引入部分 **/",
            "import Form, { FormItem, Item, If, FormCore } from '@alife/no-form';",
            "import NextWrapper from '@alife/next-wrapper';",
            "import { url as UrlUtil } from '@alife/bc-ot-util';",
            "import * as Next from '@alife/next';",
            "const { Input, Select, Upload, Radio, Button, Loading, Table, moment } = NextWrapper(Next);",
            "class App extends React.Component {",
            "    constructor(props, context) {",
            "\t\tsuper(props, context);",
            "\t}",
            "\t",
            "    componentWillMount() {",
            "        this.id = UrlUtil.getUrlParam('id');",
            "        ",
            "        const validateConfig = {",
            "            username: { type: \"string\", required: true, message: '姓名不能为空' },",
            "            age: [",
            "                { type: \"string\", required: true, message: 'age不能为空' },",
            "                { validator(rule, value, callback, source, options) {",
            "                    if(isNan(value)) callback(['年龄必须为数字']);",
            "                    callback([])",
            "                }}",
            "            ],",
            "        };",
            "        ",
            "\t\tthis.core = new FormCore({",
            "\t\t    globalStatus: id ? 'preview' : 'edit',",
            "\t\t    validateConfig",
            "\t\t});",
            "\t\t",
            "\t\tthis.core.onChange = (fireKeys, values, context) => { // 按需校验",
            "            context.validateItem(fireKeys);",
            "        }",
            "\t}",
            "\t",
            "\thandleSubmit = () => {",
            "\t    this.core.validate((errors) => {",
            "\t        if (!errors) {",
            "\t            const values = core.getValues();",
            "\t            // post action",
            "\t        }",
            "\t    });",
            "\t}",
            "    render(){",
            "\t\treturn (<div className=\"order-info-wrapper\">\t\t\t",
            "\t\t\t<Form core={this.core} layout={{ control: 16, label: 8 }}>",
            "\t\t\t\t<FormItem label=\"姓名\" name=\"username\"><Input /></FormItem>",
            "\t\t\t\t<FormItem label=\"年龄\" name=\"age\"><Input /></FormItem>",
            "\t\t\t\t<If when={(values) => values.username === 'bobby' }>",
            "\t\t\t\t    <div>hello bobby</div>",
            "\t\t\t\t</If>",
            "\t\t\t\t<Item render={(values) => {",
            "\t\t\t\t    const { username, age } = values;",
            "\t\t\t\t    return <div>{username} 的年龄是{age}</div>",
            "\t\t\t\t}} />",
            "\t\t\t\t<FormItem label=\"\">",
            "\t\t\t\t    <Button type=\"primary\" onClick={this.handleSubmit}>提交</Button>",
            "\t\t\t\t</FormItem>",
            "\t\t\t</Form>",
            "\t\t</div>);",
            "\t}",
            "}",
            "export default App;"
        ],
        "description": "简单表单"
    },
    "x'xxoo": {
        "prefix": "x'xxoo",
        "scope": "javascript,typescript,javascriptreact,plaintext",
        "body": [
            "// 默认最新的next版本,想要指定特定next版本,通过'@alife/next@0.1.61'的方式指定",
            "// 范例如下，可以去掉注释查看效果",
            "import { Button } from '@alife/next';",
            "ReactDOM.render(<Button type=\"primary\">按钮</Button>, mountNode);",
            ""
        ],
        "description": "x'xxoo"
    }
}